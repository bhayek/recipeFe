{"ast":null,"code":"'use strict';\n\nvar utils = require('./../utils');\n\nvar settle = require('./../core/settle');\n\nvar buildURL = require('./../helpers/buildURL');\n\nvar parseHeaders = require('./../helpers/parseHeaders');\n\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\n\nvar createError = require('../core/createError');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest(); // HTTP basic authentication\n\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true); // Set the request timeout in MS\n\n    request.timeout = config.timeout; // Listen for ready state\n\n    request.onreadystatechange = function handleLoad() {\n      if (!request || request.readyState !== 4) {\n        return;\n      } // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n\n\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      } // Prepare the response\n\n\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n      settle(resolve, reject, response); // Clean up request\n\n      request = null;\n    }; // Handle low level network errors\n\n\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request)); // Clean up request\n\n      request = null;\n    }; // Handle timeout\n\n\n    request.ontimeout = function handleTimeout() {\n      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED', request)); // Clean up request\n\n      request = null;\n    }; // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n\n\n    if (utils.isStandardBrowserEnv()) {\n      var cookies = require('./../helpers/cookies'); // Add xsrf header\n\n\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ? cookies.read(config.xsrfCookieName) : undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    } // Add headers to the request\n\n\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    } // Add withCredentials to request if needed\n\n\n    if (config.withCredentials) {\n      request.withCredentials = true;\n    } // Add responseType to request if needed\n\n\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    } // Handle progress if needed\n\n\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    } // Not all browsers support upload events\n\n\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel); // Clean up request\n\n        request = null;\n      });\n    }\n\n    if (requestData === undefined) {\n      requestData = null;\n    } // Send the request\n\n\n    request.send(requestData);\n  });\n};","map":{"version":3,"names":["utils","require","settle","buildURL","parseHeaders","isURLSameOrigin","createError","module","exports","xhrAdapter","config","Promise","dispatchXhrRequest","resolve","reject","requestData","data","requestHeaders","headers","isFormData","request","XMLHttpRequest","auth","username","password","Authorization","btoa","open","method","toUpperCase","url","params","paramsSerializer","timeout","onreadystatechange","handleLoad","readyState","status","responseURL","indexOf","responseHeaders","getAllResponseHeaders","responseData","responseType","responseText","response","statusText","onerror","handleError","ontimeout","handleTimeout","isStandardBrowserEnv","cookies","xsrfValue","withCredentials","xsrfCookieName","read","undefined","xsrfHeaderName","forEach","setRequestHeader","val","key","toLowerCase","e","onDownloadProgress","addEventListener","onUploadProgress","upload","cancelToken","promise","then","onCanceled","cancel","abort","send"],"sources":["/Users/bryan/code/yumTum/FE/recipie-app/node_modules/axios/lib/adapters/xhr.js"],"sourcesContent":["'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar buildURL = require('./../helpers/buildURL');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request.onreadystatechange = function handleLoad() {\n      if (!request || request.readyState !== 4) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      var cookies = require('./../helpers/cookies');\n\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ?\n          cookies.read(config.xsrfCookieName) :\n          undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (config.withCredentials) {\n      request.withCredentials = true;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (requestData === undefined) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}